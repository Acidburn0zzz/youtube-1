#!/bin/bash

SECTION='# >> '

main(){

  declare -A keys
  declare -A sects
  declare -A vars

  mode=launch

  while getopts :eon option; do
    case "${option}" in
      e ) mode=edit ;;
      o ) mode=open ;;
      n ) mode=new  ;;
    esac
  done

  parsconfig

  displaymenu "$mode"
}

parsconfig(){
  eval "$(i3-msg -t get_config | awk -v sect="${SECTION}" '
  BEGIN {foundkeys=0;foundsects=0;foundvars=0}
  {

    if($1=="mode") {ismode=1}
    if($1=="}")    {ismode=0}

    gsub(/["]/,"\\\"",$0)

    original=$0

    for(k in variables){
      gsub("[$]"k,variables[k],$0)
    }

    if($1=="bindsym" && ismode!=1){

      gsub("[$]","\\$",original)

      if($0!~"exec"){msg="i3-msg "}
      else {msg=""}

      gsub(/bindsym|--release|exec|--no-startup-id/,"",$0)
      
      gsub("+","",$1)

      sub("Mod4","#",$1)
      sub("Mod1","!",$1)
      sub("Control","^",$1)
      sub("Shift","+",$1)

      bindsym=$1
      $1=""
      sub(/^[[:space:]]*/,"",$0)
      cmd=$0
      realcmd=msg cmd

      print "keys[" foundkeys "-bindsym]=\"" bindsym "\""
      print "keys[" foundkeys "-cmd]=\"" cmd "\""
      print "keys[" foundkeys "-realcmd]=\"" realcmd "\""
      print "keys[" foundkeys "-original]=\"" original "\""

      foundkeys++
    }

    if ($0 ~ "^" sect) {
      sub(sect,"",$0)

      print "sects[" foundsects "-name]=\"" $0 "\""
      print "sects[" foundsects "-line]=\"" NR "\""

      foundsects++
    }

    #  $super bindsym Mod4
    if($1=="set"){
      sub("[$]","",$2)
      uservar=$2
      $1=$2=""
      sub(/^[[:space:]]*/,"",$0)
      userval=$0
      variables[uservar]=userval

      print "vars[" foundvars "-var]=\"" uservar "\""
      print "vars[" foundvars "-val]=\"" userval "\""

      foundvars++
    }
    
  }

  END {
    print "foundkeys=" foundkeys
    print "foundsects=" foundsects
    print "foundvars=" foundvars
  }

  ')"
}

displaymenu(){

  mode="$1"


  if [[ $mode =~ new|open ]];then

    selected="$({
      for ((i=0;i<foundsects;i++)); do
        echo "${sects[${i}-name]}"
      done
    } | rofi -dmenu -format i -markup-rows -p "$mode, select section: ")"

  elif [[ $mode =~ launch|edit ]];then

  [[ $mode = edit ]] \
    && promptstring="edit line: " \
    || promptstring="launch command: "

    selected="$({
      for ((i=0;i<foundkeys;i++)); do
        printf '<span background="#222222" foreground="#eeeeee">%s</span> %s\n' \
               "${keys[${i}-bindsym]}" "${keys[${i}-cmd]}"
      done
    } | rofi -dmenu -format i -markup-rows -p "$promptstring")"

  fi

  [[ -z $selected ]] && exit 1

  [[ $mode =~ edit|new ]] && dunstify -r 123445 -t 0 "$(msgtext)"

  case $mode in
    edit )
      oldline="${keys[${selected}-original]}"
      newline="$(rofi -dmenu -filter "$oldline" -theme-str '#entry {width: 100%;}')"
    
      [[ -z $newline ]] && dunstify -C 123445 && exit 1

      i3configfile="$(i3 --moreversion | awk '$1=="Loaded"{print $4;exit}')"

      i3-msg -t get_config | awk -v ol="$oldline" -v nl="$newline" '
                             {if(ol==$0) print nl; else print $0} 
                             ' > "$i3configfile"

      i3-msg reload
    ;;

    launch ) echo "${keys[${selected}-realcmd]}" ;;

    open )
      i3configfile="$(i3 --moreversion | awk '$1=="Loaded"{print $4;exit}')"
      linenr="${sects[${selected}-line]}gg"
      subl "$i3configfile"
      i3run -g -i sublime_main

      xdotool key $(
        for ((i=0;i<${#linenr};i++)); do 
          echo -n "${linenr:$i:1} "
        done
      )
      ;;

    new )
      newline="$(rofi -dmenu -filter "$oldline" -theme-str '#entry {width: 100%;}')"
      [[ -z $newline ]] && dunstify -C 123445 && exit 1
      i3configfile="$(i3 --moreversion | awk '$1=="Loaded"{print $4;exit}')"
      linenr="${sects[${selected}-line]}"
      i3-msg -t get_config | awk -v lnr="$linenr" -v nl="${newline}" 'NR==lnr {print; print ""; print nl};NR!=lnr{print}' > "$i3configfile"
      subl "$i3configfile"
      i3run -g -i sublime_main
      linenr="${linenr}gg"
      xdotool key $(
        for ((i=0;i<${#linenr};i++)); do 
          echo -n "${linenr:$i:1} "
        done
      )

      i3-msg reload
      ;;
  esac

  dunstify -C 123445
}

msgtext(){
  for ((i=0;i<foundvars;i++));do
    printf '%20s | %s\n' "\$${vars[${i}-var]}" "${vars[${i}-val]}"
  done
}

main "${@}"
